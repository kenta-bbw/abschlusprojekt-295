{
	"info": {
		"_postman_id": "7e2a0c21-2dca-4d85-909d-17ee3f62efc4",
		"name": "Leistungsnachweis B",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29157091"
	},
	"item": [
		{
			"name": "tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has valid JSON body\", function () {",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Response body is an array\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('array');",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/tasks",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response is JSON\", function () {",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
							"});",
							"",
							"pm.test(\"Response body has ID, title, description, done, and dueDate\", function () {",
							"    pm.response.to.have.jsonBody('id');",
							"    pm.response.to.have.jsonBody('title');",
							"    pm.response.to.have.jsonBody('description');",
							"    pm.response.to.have.jsonBody('done');",
							"    pm.response.to.have.jsonBody('dueDate');",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n               \n  \"title\": \"\",    \n  \"description\": \"Description\", \n  \"done\": true,             \n  \"dueDate\": \"2024-06-30\"    \n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/tasks",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "tasks/id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 404\", function () {",
							"    pm.response.to.have.status(200) || pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Response has valid JSON body\", function () {",
							"    pm.response.to.be.json;",
							"});",
							"pm.test(\"Response body has ID, title, description, done, and dueDate\", function () {",
							"    pm.response.to.have.jsonBody('id');",
							"    pm.response.to.have.jsonBody('title');",
							"    pm.response.to.have.jsonBody('description');",
							"    pm.response.to.have.jsonBody('done');",
							"    pm.response.to.have.jsonBody('dueDate');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/tasks/",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"tasks",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "tasks/id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 404\", function () {",
							"    pm.response.to.have.status(200) || pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Response has valid JSON body\", function () {",
							"    pm.response.to.be.json;",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 2,                 \n  \"title\": \"Task\",    \n  \"description\": \"Description\", \n  \"done\": true,             \n  \"dueDate\": \"2024-06-30\"    \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/tasks/1",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"tasks",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "tasks/id",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 2XX or 4XX\", function () {",
							"    pm.response.to.have.status(200) || pm.response.to.have.status(499);",
							"});",
							"",
							"pm.test(\"Response is JSON\", function () {",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Response contains token\", function () {",
							"    pm.expect(pm.response.json()).to.have.property(\"token\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"anyemail@example.com\",\n    \"password\": \"m295\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/login",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "verify",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 2XX or 401\", function () {",
							"    pm.response.to.have.status(200) || pm.response.to.have.status(401);",
							"});",
							"pm.test(\"Response is JSON\", function () {",
							"    pm.response.to.be.json;",
							"});",
							"pm.test(\"Response contains token\", function () {",
							"    pm.expect(pm.response.json()).to.have.property(\"token\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/verify",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"verify"
					]
				}
			},
			"response": []
		},
		{
			"name": "logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.be.success;",
							"});",
							"",
							"pm.test(\"Response body is empty\", function () {",
							"    pm.expect(pm.response.text()).to.be.empty;",
							"});",
							"",
							"pm.test(\"Token should be invalidated\", function () {",
							"    pm.environment.unset(\"authToken\"); ",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:3000/logout",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"logout"
					]
				}
			},
			"response": []
		}
	]
}